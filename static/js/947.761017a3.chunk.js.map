{"version":3,"file":"static/js/947.761017a3.chunk.js","mappings":"kKAIA,UAJa,WACX,OAAOA,EAAAA,EAAAA,KAAA,OAAAC,SAAK,QACd,C,4ICkFA,UA5EqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAyBpC,IAvBAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECC,EAAAA,EAAAA,IAAU,sCAADC,OACQnB,EAAO,mBAC7C,CACEoB,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAGN,KAAD,EATKR,EAAQC,EAAAQ,KAWdhB,EAAgBO,EAASU,MAAMT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAE/BW,QAAQC,MAAKZ,EAAAU,IAAQ,yBAAAV,EAAAa,OAAA,GAAAf,EAAA,kBAExB,kBAjBsB,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAmBvBrB,GACF,GAAG,CAACT,KAECM,EACH,OAAOR,EAAAA,EAAAA,KAACiC,EAAAA,EAAc,IAYxB,OAFAL,QAAQM,IAAI1B,IAGV2B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAnC,SAAA,EACED,EAAAA,EAAAA,KAACqC,EAAAA,GAAI,CAACC,GAAG,IAAGrC,SAAC,aAEbD,EAAAA,EAAAA,KAAA,MAAAC,SAAKO,EAAa+B,SAClBvC,EAAAA,EAAAA,KAAA,OACEwC,IAAG,kCAAAnB,OAAoCb,EAAaiC,aACpDC,IAAG,cAAArB,OAAgBb,EAAa+B,UAElCvC,EAAAA,EAAAA,KAAA,MAAAC,SACGO,EAAamC,OAAOC,KAAI,SAAAC,GACvB,OAAO7C,EAAAA,EAAAA,KAAA,MAAAC,SAAoB4C,EAAMC,MAAjBD,EAAME,GACxB,OAGFZ,EAAAA,EAAAA,MAAA,OAAAlC,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,cACJD,EAAAA,EAAAA,KAAA,KAAAC,SAAIO,EAAawC,eAEnBb,EAAAA,EAAAA,MAAA,KAAAlC,SAAA,CA5BiC,SAAAgD,GACnC,IAEMC,EAFYD,EAAME,aACH,GACoC,IACzD,OAAOC,KAAKC,MAAMH,EACpB,CAuBQI,CAA6B9C,GAAc,QAE/C2B,EAAAA,EAAAA,MAAA,MAAAlC,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACqC,EAAAA,GAAI,CAACC,GAAE,WAAAjB,OAAanB,EAAO,SAAQD,SAAC,YAEvCD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACqC,EAAAA,GAAI,CAACC,GAAE,WAAAjB,OAAanB,EAAO,YAAWD,SAAC,kBAI5CD,EAAAA,EAAAA,KAACuD,EAAAA,QAAI,KACLvD,EAAAA,EAAAA,KAACwD,EAAAA,QAAO,MAGd,C,0CC9EA,UAJgB,WACd,OAAOxD,EAAAA,EAAAA,KAAA,OAAAC,SAAK,WACd,C","sources":["components/Cast/Cast.jsx","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["const Cast = () => {\n  return <div>Cast</div>;\n};\n\nexport default Cast;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport LoadingSpinner from 'components/LoadingSpinner/LoadingSpinner.jsx';\nimport Cast from 'components/Cast/Cast.jsx';\nimport Reviews from 'components/Reviews/Reviews.jsx';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n          {\n            headers: {\n              accept: 'application/json',\n              Authorization:\n                'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWM4YjU4MjhiNGVjNGMwZjU5YzFkZTVlMmQ1ZTNiOCIsInN1YiI6IjY1YzNhMDVlMmZlMmZhMDE4NDJhODNlOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.V9SAFWmxQkdTT5KUPdr_PSuh1d-FJ7WmxFeruZ9_Y5Q',\n            },\n          }\n        );\n\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <LoadingSpinner />;\n  }\n\n  const calculateUserScorePercentage = movie => {\n    const userScore = movie.vote_average;\n    const maximumScore = 10;\n    const userScorePercentage = (userScore / maximumScore) * 100;\n    return Math.round(userScorePercentage);\n  };\n\n  console.log(movieDetails);\n\n  return (\n    <>\n      <Link to=\"/\">Go back</Link>\n\n      <h2>{movieDetails.title}</h2>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n        alt={`Poster for ${movieDetails.title}`}\n      />\n      <ul>\n        {movieDetails.genres.map(genre => {\n          return <li key={genre.id}>{genre.name}</li>;\n        })}\n      </ul>\n\n      <div>\n        <h3>Overview</h3>\n        <p>{movieDetails.overview}</p>\n      </div>\n      <p>{calculateUserScorePercentage(movieDetails)}%</p>\n\n      <ul>\n        <li>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n        </li>\n        <li>\n          <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </li>\n      </ul>\n\n      <Cast />\n      <Reviews />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const Reviews = () => {\n  return <div>Reviews</div>;\n};\n\nexport default Reviews;\n"],"names":["_jsx","children","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","headers","accept","Authorization","sent","data","t0","console","error","stop","apply","arguments","LoadingSpinner","log","_jsxs","_Fragment","Link","to","title","src","poster_path","alt","genres","map","genre","name","id","overview","movie","userScorePercentage","vote_average","Math","round","calculateUserScorePercentage","Cast","Reviews"],"sourceRoot":""}