{"version":3,"file":"static/js/186.cd35b41f.chunk.js","mappings":"8LAkDA,UA9CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAgDL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GA6B5C,OA3BAG,EAAAA,EAAAA,YAAU,WASRC,EAAAA,EAAAA,IACO,sCAADC,OACoCd,EAAO,kCAVjC,CACde,QAAS,CACPC,OAAQ,mBACRC,cACE,gOASHC,MAAK,SAAAC,GACJ,IAAMC,EAAkBD,EAASE,KAAKC,QACtCf,EAAea,GAEgB,IAA3BA,EAAgBG,OAClBZ,EAAoB,4CAEpBA,EAAoB,GAExB,IACCa,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GACpC,GAAG,CAACzB,KAGF4B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACHpB,IAAoBqB,EAAAA,EAAAA,KAAA,KAAAD,SAAIpB,IACxBJ,EAAY0B,KAAI,SAAAC,GAAc,OAC7BL,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,WAASG,EAAeC,WAC3BH,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAeE,YAFXF,EAAeG,GAGnB,MAId,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsList, setReviewsList] = useState([]);\n  const [noReviewsMessage, setNoReviewsMessage] = useState('');\n\n  useEffect(() => {\n    const options = {\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWM4YjU4MjhiNGVjNGMwZjU5YzFkZTVlMmQ1ZTNiOCIsInN1YiI6IjY1YzNhMDVlMmZlMmZhMDE4NDJhODNlOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.V9SAFWmxQkdTT5KUPdr_PSuh1d-FJ7WmxFeruZ9_Y5Q',\n      },\n    };\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n        options\n      )\n      .then(response => {\n        const receivedReviews = response.data.results;\n        setReviewsList(receivedReviews);\n\n        if (receivedReviews.length === 0) {\n          setNoReviewsMessage('We dont have any reviews for this movie.');\n        } else {\n          setNoReviewsMessage('');\n        }\n      })\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Reviews</h2>\n      {noReviewsMessage && <p>{noReviewsMessage}</p>}\n      {reviewsList.map(reviewListItem => (\n        <div key={reviewListItem.id}>\n          <p>Author: {reviewListItem.author}</p>\n          <p>{reviewListItem.content}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviewsList","setReviewsList","_useState3","_useState4","noReviewsMessage","setNoReviewsMessage","useEffect","axios","concat","headers","accept","Authorization","then","response","receivedReviews","data","results","length","catch","err","console","error","_jsxs","_Fragment","children","_jsx","map","reviewListItem","author","content","id"],"sourceRoot":""}