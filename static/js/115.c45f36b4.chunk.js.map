{"version":3,"file":"static/js/115.c45f36b4.chunk.js","mappings":"iOAuDA,UApDe,WACb,IAAAA,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,GAAWC,EAAAA,EAAAA,MAEXC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECC,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,eAAe,EACfC,SAAU,QACVC,KAAM,EACNC,MAAOtB,GAETuB,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAGN,KAAD,EAfKZ,EAAQC,EAAAY,KAiBdrB,EAAUQ,EAASc,KAAKC,SAExBtB,EAAS,iBAADuB,OAAkB7B,IAAkBc,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAgB,GAAAhB,EAAA,SAE5CiB,QAAQC,MAAKlB,EAAAgB,IAAQ,yBAAAhB,EAAAmB,OAAA,GAAArB,EAAA,kBAExB,kBAzBsB,OAAAH,EAAAyB,MAAA,KAAAC,UAAA,KA2BvB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEC,SAAU,SAAAC,GAAC,OAAIvC,EAAkBuC,EAAEC,OAAOC,MAAM,EAChDC,KAAK,OACLD,MAAO1C,KAETsC,EAAAA,EAAAA,KAAA,UAAQM,QAASpC,EAAkB6B,SAAC,YAEpCC,EAAAA,EAAAA,KAAA,MAAAD,SACGjC,EAAOyC,KAAI,SAAAC,GAAK,OACfR,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAE,WAAAnB,OAAaiB,EAAMG,IAAKZ,SAAES,EAAMI,SADjCJ,EAAMG,GAEV,QAKf,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nconst Movies = () => {\n  const [newMovieSearch, setNewMovieSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const navigate = useNavigate();\n\n  const handleMovieSearch = async () => {\n    try {\n      const response = await axios.get(\n        'https://api.themoviedb.org/3/search/movie',\n        {\n          params: {\n            include_adult: false,\n            language: 'en-US',\n            page: 1,\n            query: newMovieSearch,\n          },\n          headers: {\n            accept: 'application/json',\n            Authorization:\n              'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWM4YjU4MjhiNGVjNGMwZjU5YzFkZTVlMmQ1ZTNiOCIsInN1YiI6IjY1YzNhMDVlMmZlMmZhMDE4NDJhODNlOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.V9SAFWmxQkdTT5KUPdr_PSuh1d-FJ7WmxFeruZ9_Y5Q',\n          },\n        }\n      );\n\n      setMovies(response.data.results);\n\n      navigate(`/movies?query=${newMovieSearch}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        onChange={e => setNewMovieSearch(e.target.value)}\n        type=\"text\"\n        value={newMovieSearch}\n      />\n      <button onClick={handleMovieSearch}>Search</button>\n\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","newMovieSearch","setNewMovieSearch","_useState3","_useState4","movies","setMovies","navigate","useNavigate","handleMovieSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","params","include_adult","language","page","query","headers","accept","Authorization","sent","data","results","concat","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","onChange","e","target","value","type","onClick","map","movie","Link","to","id","title"],"sourceRoot":""}