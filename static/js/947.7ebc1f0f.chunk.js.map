{"version":3,"file":"static/js/947.7ebc1f0f.chunk.js","mappings":"kKAIA,UAJa,WACX,OAAOA,EAAAA,EAAAA,KAAA,OAAAC,SAAK,QACd,C,4ICoGA,UA9FqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAyBpC,IAvBAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECC,EAAAA,EAAAA,IAAU,sCAADC,OACQnB,EAAO,mBAC7C,CACEoB,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAGN,KAAD,EATKR,EAAQC,EAAAQ,KAWdhB,EAAgBO,EAASU,MAAMT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAE/BW,QAAQC,MAAKZ,EAAAU,IAAQ,yBAAAV,EAAAa,OAAA,GAAAf,EAAA,kBAExB,kBAjBsB,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAmBvBrB,GACF,GAAG,CAACT,KAECM,EACH,OAAOR,EAAAA,EAAAA,KAACiC,EAAAA,EAAc,IAGxB,IAOMC,EAAkB,SAAAC,GACtBC,OAAOC,QAAQC,aAAa,KAAM,KAAMH,EAC1C,EAIA,OAFAP,QAAQW,IAAI/B,IAGVgC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAxC,SAAA,EACED,EAAAA,EAAAA,KAAC0C,EAAAA,GAAI,CAACC,GAAG,IAAG1C,SAAC,aAEbD,EAAAA,EAAAA,KAAA,MAAAC,SAAKO,EAAaoC,SAClB5C,EAAAA,EAAAA,KAAA,OACE6C,IAAG,kCAAAxB,OAAoCb,EAAasC,aACpDC,IAAG,cAAA1B,OAAgBb,EAAaoC,UAElC5C,EAAAA,EAAAA,KAAA,MAAAC,SACGO,EAAawC,OAAOC,KAAI,SAAAC,GACvB,OAAOlD,EAAAA,EAAAA,KAAA,MAAAC,SAAoBiD,EAAMC,MAAjBD,EAAME,GACxB,OAGFZ,EAAAA,EAAAA,MAAA,OAAAvC,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,cACJD,EAAAA,EAAAA,KAAA,KAAAC,SAAIO,EAAa6C,eAEnBb,EAAAA,EAAAA,MAAA,KAAAvC,SAAA,CAhCiC,SAAAqD,GACnC,IAEMC,EAFYD,EAAME,aACH,GACoC,IACzD,OAAOC,KAAKC,MAAMH,EACpB,CA2BQI,CAA6BnD,GAAc,QAE/CgC,EAAAA,EAAAA,MAAA,MAAAvC,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAA,KACE4D,QAAS,kBACP1B,EAAgB,mCAADb,OAAoCnB,EAAO,SAAQ,EACnED,SACF,YAIHD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAA,KACE4D,QAAS,kBACP1B,EAAgB,mCAADb,OACsBnB,EAAO,YAC3C,EACFD,SACF,kBAMLD,EAAAA,EAAAA,KAAC6D,EAAAA,QAAI,KACL7D,EAAAA,EAAAA,KAAC8D,EAAAA,QAAO,MAGd,C,0CChGA,UAJgB,WACd,OAAO9D,EAAAA,EAAAA,KAAA,OAAAC,SAAK,WACd,C","sources":["components/Cast/Cast.jsx","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["const Cast = () => {\n  return <div>Cast</div>;\n};\n\nexport default Cast;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport LoadingSpinner from 'components/LoadingSpinner/LoadingSpinner.jsx';\nimport Cast from 'components/Cast/Cast.jsx';\nimport Reviews from 'components/Reviews/Reviews.jsx';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n          {\n            headers: {\n              accept: 'application/json',\n              Authorization:\n                'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZWM4YjU4MjhiNGVjNGMwZjU5YzFkZTVlMmQ1ZTNiOCIsInN1YiI6IjY1YzNhMDVlMmZlMmZhMDE4NDJhODNlOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.V9SAFWmxQkdTT5KUPdr_PSuh1d-FJ7WmxFeruZ9_Y5Q',\n            },\n          }\n        );\n\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <LoadingSpinner />;\n  }\n\n  const calculateUserScorePercentage = movie => {\n    const userScore = movie.vote_average;\n    const maximumScore = 10;\n    const userScorePercentage = (userScore / maximumScore) * 100;\n    return Math.round(userScorePercentage);\n  };\n\n  const handleLinkClick = path => {\n    window.history.replaceState(null, null, path);\n  };\n\n  console.log(movieDetails);\n\n  return (\n    <>\n      <Link to=\"/\">Go back</Link>\n\n      <h2>{movieDetails.title}</h2>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n        alt={`Poster for ${movieDetails.title}`}\n      />\n      <ul>\n        {movieDetails.genres.map(genre => {\n          return <li key={genre.id}>{genre.name}</li>;\n        })}\n      </ul>\n\n      <div>\n        <h3>Overview</h3>\n        <p>{movieDetails.overview}</p>\n      </div>\n      <p>{calculateUserScorePercentage(movieDetails)}%</p>\n\n      <ul>\n        <li>\n          <p\n            onClick={() =>\n              handleLinkClick(`/goit-react-hw-05-movies/movies/${movieId}/cast`)\n            }\n          >\n            Cast\n          </p>\n        </li>\n        <li>\n          <p\n            onClick={() =>\n              handleLinkClick(\n                `/goit-react-hw-05-movies/movies/${movieId}/reviews`\n              )\n            }\n          >\n            Reviews\n          </p>\n        </li>\n      </ul>\n\n      <Cast />\n      <Reviews />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const Reviews = () => {\n  return <div>Reviews</div>;\n};\n\nexport default Reviews;\n"],"names":["_jsx","children","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","headers","accept","Authorization","sent","data","t0","console","error","stop","apply","arguments","LoadingSpinner","handleLinkClick","path","window","history","replaceState","log","_jsxs","_Fragment","Link","to","title","src","poster_path","alt","genres","map","genre","name","id","overview","movie","userScorePercentage","vote_average","Math","round","calculateUserScorePercentage","onClick","Cast","Reviews"],"sourceRoot":""}